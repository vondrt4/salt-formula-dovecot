{%- from "dovecot/map.jinja" import server with context %}

auth_debug = {% if server.debug %}yes{% else %}no{% endif %}
auth_verbose = {% if server.verbose %}yes{% else %}no{% endif %}

{%- if server.ssl.enabled %}

ssl_cert = < /etc/dovecot/ssl/ssl_cert.crt
ssl_key = < /etc/dovecot/ssl/ssl_key.key
ssl = required
disable_plaintext_auth = yes
# SSL protocols to use, disable SSL, use TLS only
ssl_protocols = !SSLv3 !SSLv2
# SSL ciphers to use
ssl_cipher_list = EDH+CAMELLIA:EDH+aRSA:EECDH+aRSA+AESGCM:EECDH+aRSA+SHA256:EECDH:+CAMELLIA128:+AES128:+SSLv3:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!PSK:!DSS:!RC4:!SEED:!IDEA:!ECDSA:kEDH:CAMELLIA128-SHA:AES128-SHA
# Prefer the server's order of ciphers over client's. (Dovecot >=2.2.6 Required)
ssl_prefer_server_ciphers = yes
# Diffie-Hellman parameters length (Default is 1024, Dovecot >=2.2.7 Required)
# ToDo: for ReGenerating DH-Parameters:
# manually delete /var/lib/dovecot/ssl-parameters.dat and restart
# Dovecot to regenerate /var/lib/dovecot/ssl-parameters.dat
ssl_dh_parameters_length = 2048
# Disable Compression (Dovecot >= 2.2.14 Required)
#ssl_options = no_compression
{%- elif server.ssl.letsencrypt %}

ssl_cert = < /etc/letsencrypt/live/{{ server.name }}/fullchain.pem
ssl_key = < /etc/letsencrypt/live/{{ server.name }}/privkey.pem
ssl = required
disable_plaintext_auth = yes
# SSL protocols to use, disable SSL, use TLS only
ssl_protocols = !SSLv3 !SSLv2
# SSL ciphers to use
ssl_cipher_list = EDH+CAMELLIA:EDH+aRSA:EECDH+aRSA+AESGCM:EECDH+aRSA+SHA256:EECDH:+CAMELLIA128:+AES128:+SSLv3:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!PSK:!DSS:!RC4:!SEED:!IDEA:!ECDSA:kEDH:CAMELLIA128-SHA:AES128-SHA
# Prefer the server's order of ciphers over client's. (Dovecot >=2.2.6 Required)
ssl_prefer_server_ciphers = yes
# Diffie-Hellman parameters length (Default is 1024, Dovecot >=2.2.7 Required)
# ToDo: for ReGenerating DH-Parameters:
# manually delete /var/lib/dovecot/ssl-parameters.dat and restart
# Dovecot to regenerate /var/lib/dovecot/ssl-parameters.dat
ssl_dh_parameters_length = 2048
# Disable Compression (Dovecot >= 2.2.14 Required)
#ssl_options = no_compression

{%- else %}

ssl = no
disable_plaintext_auth = no

{%- endif %}

first_valid_gid = 20
first_valid_uid = 20

listen = * [::]

log_timestamp = "%Y-%m-%d %H:%M:%S "

mail_access_groups = postfix
mail_privileged_group = postfix
mail_location = maildir:{{ server.mailbox_base }}/%d/%u:INDEX={% if server.index.get('enabled', True) %}{{ server.index.path }}/%d/%u{% else %}MEMORY{% endif %}
mail_max_userip_connections = 99

{%- if server.nfs %}
# NFS support
mail_nfs_index = yes
mail_nfs_storage = yes
mail_fsync=always
mmap_disable = yes
{%- endif %}

namespace inbox {
  inbox = yes

  mailbox Drafts {
    auto = subscribe
    special_use = \Drafts
  }

  mailbox Junk {
    auto = subscribe
    special_use = \Junk
  }

  mailbox Trash {
    auto = subscribe
    special_use = \Trash
  }

  mailbox Sent {
    auto = subscribe
    special_use = \Sent
  }

  mailbox "Sent Messages" {
    special_use = \Sent
  }

  mailbox Archive {
    auto = subscribe
    special_use = \Archive
  }
}

passdb {
  args = /etc/dovecot/dovecot-sql.conf
  driver = sql
}

protocols = {% if server.service.imap.enabled %}imap{% endif %} {% if server.service.pop3.enabled %}pop3{% endif %} {% if server.service.lmtp.enabled %}lmtp{% endif %} {% if server.service.lmtp.enabled %}sieve{% endif %}

service auth {
  unix_listener /var/spool/postfix/private/auth {
    mode = 0660
    user = postfix
    group = postfix
  }
  user = dovecot
}

{%- if server.service.imap.get('enabled', True) %}

service imap-login {
  chroot = login
  user = dovecot
  vsz_limit = {{ server.service.imap.vsz_limit }}M

  {%- if server.service.director.get('enabled', False) %}
  executable = imap-login director
  {%- endif %}
}

{%- endif %}

{%- if server.service.pop3.get('enabled', True) %}

service pop3-login {
  chroot = login
  user = dovecot
  vsz_limit = {{ server.service.pop3.vsz_limit }}M

  {%- if server.service.director.get('enabled', False) %}
  executable = pop3-login director
  {%- endif %}
}

{%- endif %}

{%- if server.service.lmtp.enabled %}

service lmtp {
  user = {{ server.user.name }}
  process_min_avail = {{ server.service.lmtp.process_min_avail }}
  unix_listener /var/spool/postfix/private/dovecot-lmtp {
    mode = 0600
    user = postfix
    group = postfix
  }
  {%- if server.service.lmtp.get('inet_enabled', False) %}
  inet_listener lmtp {
    port = {{ server.service.lmtp.port }}
  }
  {%- endif %}
}

protocol lmtp {
  postmaster_address = {{ server.admin }}
  mail_plugins = quota sieve
}

{%- if server.service.director.get('enabled', False) and server.service.lmtp.get('inet_enabled', False) %}
lmtp_proxy = yes
{%- endif %}

{%- endif %}

{%- if server.service.sieve.enabled %}

service managesieve-login {
  chroot = login
  user = dovecot
  vsz_limit = {{ server.service.sieve.vsz_limit }}M
  inet_listener sieve {
    port = 4190
  }
}

service managesieve {
}

protocol sieve {
  mail_max_userip_connections = 100
}

plugin {
  sieve = ~/.dovecot.sieve
  sieve_after = /var/lib/dovecot/sieve/default.sieve
  sieve_dir = ~/sieve
}

{%- endif %}

userdb {
  args = /etc/dovecot/dovecot-sql.conf
  driver = sql
}

protocol pop3 {
  pop3_uidl_format = %08Xu%08Xv
}

{%- if server.service.director.get('enabled', False) %}

service director {
  unix_listener login/director {
    mode = 0666
  }
  fifo_listener login/proxy-notify {
    mode = 0666
  }
  unix_listener director-userdb {
    mode = 0600
  }
  inet_listener {
    port = {{ server.service.director.port }}
  }
}

director_servers = {{ server.service.director.directors|join(' ') }}
director_mail_servers = {{ server.service.director.backends|join(' ') }}

{%- endif %}

{#
vim: syntax=jinja sw=2 et
#}
